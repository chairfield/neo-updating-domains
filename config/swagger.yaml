swagger: "2.0"
info:
  version: "0.0.1"
  title: Domain Graph
# during dev, should point to your local machine
host: localhost:10010
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /query:
    x-swagger-router-controller: query
    get:
      description: Query graph by domain
      operationId: queryByDomain
      parameters:
        - name: domain
          in: query
          description: Exact domain name to query for
          required: true
          type: string
        - name: depth
          in: query
          description: Depth to traverse in graph
          required: true
          type: number
      responses:
        "200":
          description: Subset of the graph starting at domain
          schema:
            $ref: "#/definitions/GraphResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
      tags:
        - query
  /pets:
    x-swagger-router-controller: pets
    get:
      description: List all pets
      operationId: listPets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          type: integer
          format: int32
      responses:
        "200":
          description: A paged array of pets
          schema:
            $ref: "#/definitions/Pets"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
      tags:
        - pets
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  GraphResponse:
    properties:
      nodes:
        type: array
        items:
          $ref: "#/definitions/Node"
  Node:
    properties:
      id:
        type: number
        description: Unique ID (also popularity rank)
      domain:
        type: string
        description: Domain Name
      ip:
        type: string
        description: IP Address
  Pet:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
  Pets:
    properties:
      pets:
        type: array
        items:
          $ref: "#/definitions/Pet"
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
